<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title> Canvas Resize </title>
	<style type="text/css">
		canvas{
			border: 0px solid green;
			
		}

		document.getElementById("textBox").addEventListener('keyup',function(e){
	localstorage.setItem('value', this.value);
	localstorage.setItem(timestamp',(newDate()).getTime());
	}, false);
		
		body{
			margin: 0;
		}
	</style>
</head>
<body>

	<canvas></canvas>
	<script src="canvas.js"></script>
</body>
</html>

/* // JS
var canvas = document.querySelector('canvas');
canvas.width =  window.innerWidth;
canvas.height = window.innerHeight;

var c  = canvas.getContext('2d');
/*c.fillStyle = 'rgba(100, 50, 10, 0.5)';
c.fillRect(100, 200, 300, 400);
c.fillStyle = 'rgba(200, 100, 20, 1)';
c.fillRect(200, 400, 600, 800);
c.fillStyle = 'rgba(300, 150, 30, 2)';
c.fillRect(300, 600, 900, 1200);
*/
console.log(canvas);

/*//LINE
c.beginPath();
c.moveTo(65,1210);
c.lineTo(100, 200);
c.strokeStyle = "#fa34a3";
c.stroke();*/

// Arc/circle
/*c.beginPath();
c.arc(500, 500, 50, 800, Math.PI = 2, true);
c.strokeStyle= 'green';
c.stroke();*/

/*for (var i = 0; i < 100; i++) {
	var x = Math.random() * window.innerWidth
	;
	var y = Math.random() * window.
	innerHeight;
	c.beginPath();
c.arc(x, y, 30, 0, Math.PI * 2, false);
c.strokeStyle= 'blue';
c.stroke();
}*/
var mouse = {
	x: undefined,
	y: undefined
}

var maxRadius = 40;
var minRadius = 2;

var colorArray = [
	'#FFF587',
	'#FF8C64',
	'#FF665A',
	'#7D6B7D',
	'#A3A1A8',
];


window.addEventListener('mousemove', function(event) {
	mouse.x = event.x;
	mouse.y = event.y;
	
	init();
})

window.addEventListener('resize', function()
{
	canvas.width = window.innerWidth;
	canvas.height = window.innerHeight;
});

function Circle(x, y, dx, dy, radius, color) {
	this.x = x;
	this.y = y;
	this.dx = dx;
	this.dy = dy;
	this.radius = radius;
	this.minRadius = minRadius;
	this.color = colorArray [Math.floor(Math.random() * colorArray.length)];

	this.draw = function() {
c.beginPath();
c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
c.strokeStyle = 'green';
c.stroke();
c.fillStyle = this.color;
c.fill();
}

	this.update = function () {
		if (this.x + this.radius > innerWidth || this.x -this.radius < 1) {
	this.dx = -this.dx;
}

if (this.y + this.radius > innerHeight || this.y -this.radius < 1) {
	this.dy = -this.dy;
}
this.x += this.dx;
this.y += this.dy;

		// INTERACTIVITY
if (mouse.x - this.x < 20 && mouse.x - this.x > -20
	&& mouse.y - this.y < 20 && mouse.y - this.y > -20) {
	if (this.radius < maxRadius) {
	this.radius += 1;
	}	
} else if (this.radius > this.minRadius){
	this.radius -=1;
}


this.draw();
	}

}

var circleArray = [];

function init () {


for (var i = 0; i < 100; i++) {
var radius = 1;
var x = Math.random() * (innerWidth - radius * 2) - radius;
var y = Math.random() * (innerHeight - radius * 2) + radius;
var dx = (Math.random() - 1);
var dy = (Math.random() - 1);
circleArray.push(new Circle(x, y, dx, dy, radius));
	
}

}
	function animate() {
	requestAnimationFrame(animate);
	c.clearRect(0,0, innerWidth, innerHeight);

for (var i = 0; i < circleArray.length;  i++) {
	circleArray[i].update();
}
	circle.update ();




}

animate ();
